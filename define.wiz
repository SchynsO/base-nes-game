/**
 * Define base memory layout
 */

// Specify that the target system is the NES
config {
	format          = "nes" ,
    battery         = false ,
	vertical_mirror = true  ,
	cart_type       = "mmc3", // mapper for per-scanline scrolling
}

import "nes";

/**
 * vardata           : uninitialized RAM
 * prgdata/constdata : program and constants (cannot be written to)
 * chrdata           : store tiles (NES specific)
 * varinitdata       : initialized RAM
 * */

bank zeropage  @ 0x0000 : [vardata; 0x0100]; // for variables
bank stack     @ 0x0100 : [vardata; 0x0100]; // for stack
bank oam       @ 0x0200 : [vardata; 0x0100]; // for sprites
bank RAM       @ 0x0300 : [vardata; 0x0500]; // ...
bank program   @ 0x8000 : [prgdata; 0x8000]; // for instructions & constants
bank chr                : [chrdata; 0x2000]; // for graphics

in zeropage {
	
	var // 16 basic variables
	a0, a1, a2, a3, 
	a4, a5, a6, a7, 
	a8, a9, aA, aB, 
	aC, aD, aE, aF : u8;

	var // 4 words
	w0 @ &a0, 
	w1 @ &a2, 
	w2 @ &a4, 
	w3 @ &a6 : u16;

	var // 4 pointers
	ptr0 @ &a8, 
	ptr1 @ &aA, 
	ptr2 @ &aC, 
	ptr3 @ &aE : *u8;
}

in oam {
	var oam_buffer : [u8; 0x100];
}

in chr {
	const = embed "res/bg-tiles.chr";
	const = embed "res/fg-tiles.chr";
}

namespace math {
	/*
	const sine_pos : [u8] = [
		0x11,0x12,0x13,0x14, 0x16,0x18,0x1a,0x1c, 0x1f,0x22,0x25,0x28, 0x2c,0x30,0x34,0x38,
		0x3c,0x40,0x44,0x48, 0x4b,0x4e,0x51,0x54, 0x56,0x58,0x5a,0x5c, 0x5d,0x5e,0x5f,0x60,
		0x60,0x5f,0x5e,0x5d, 0x5c,0x5a,0x58,0x56, 0x54,0x51,0x4e,0x4b, 0x48,0x44,0x40,0x3c,
		0x38,0x34,0x30,0x2c, 0x28,0x25,0x22,0x1f, 0x1c,0x1a,0x18,0x16, 0x14,0x13,0x12,0x11,
	]; // */
	in program {
		const sine : [i8] = [
			-39, -38, -37, -36, 
			-34, -32, -30, -28, 
			-25, -22, -19, -16, 
			-12,  -8,  -4,   0, 

			4,   8,  12,  16, 
			19,  22,  25,  28, 
			30,  32,  34,  36, 
			37,  38,  39,  40, 

			40,  39,  38,  37, 
			36,  34,  32,  30, 
			28,  25,  22,  19, 
			16,  12,   8,   4, 
			
			0,  -4,  -8, -12, 
			-16, -19, -22, -25, 
			-28, -30, -32, -34, 
			-36, -37, -38, -39
		];
	}
}

namespace screen {
	let PIXEL_WIDTH  = 256;
	let PIXEL_HEIGHT = 240;

	let WIDTH  = PIXEL_WIDTH  / 8;
	let HEIGHT = PIXEL_HEIGHT / 8;
}